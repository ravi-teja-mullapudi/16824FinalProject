name: "COCOSuperClass"
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "/home/rmullapu/16824FinalProject/imagenet_mean.binaryproto"
  }
  image_data_param {
    root_folder: "/home/rmullapu/16824FinalProject/coco_super_category_crops/"
    source: "/home/rmullapu/16824FinalProject/superclass_labels_train.txt"
    batch_size: 50
    new_height: 256
    new_width: 256
    shuffle: true
  }
}

layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "/home/rmullapu/16824FinalProject/imagenet_mean.binaryproto"
  }
  image_data_param {
    root_folder: "/home/rmullapu/16824FinalProject/coco_super_category_crops/"
    source: "/home/rmullapu/16824FinalProject/superclass_labels_test.txt"
    batch_size: 100
    new_height: 256
    new_width: 256
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
 name: "bn1"
 type: "BatchNorm"
 bottom: "conv1"
 top: "bn1"
 param {
    lr_mult: 0
 }
 param {
    lr_mult: 0
 }
 param {
    lr_mult: 0
 }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "bn1"
  top: "relu1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "relu1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
 name: "bn2"
 type: "BatchNorm"
 bottom: "conv2"
 top: "bn2"
 param {
    lr_mult: 0
 }
 param {
    lr_mult: 0
 }
 param {
    lr_mult: 0
 }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn2"
  top: "relu2"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "relu2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    stride: 1
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
 name: "bn3"
 type: "BatchNorm"
 bottom: "conv3"
 top: "bn3"
 param {
    lr_mult: 0
 }
 param {
    lr_mult: 0
 }
 param {
    lr_mult: 0
 }

}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "bn3"
  top: "relu3"
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "relu3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
 name: "bn4"
 type: "BatchNorm"
 bottom: "conv4"
 top: "bn4"
 param {
    lr_mult: 0
 }
 param {
    lr_mult: 0
 }
 param {
    lr_mult: 0
 }
}

layer {
  name: "relu4"
  type: "ReLU"
  bottom: "bn4"
  top: "relu4"
}

layer {
  name: "pool5"
  type: "Pooling"
  bottom: "relu4"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
 name: "bn5"
 type: "BatchNorm"
 bottom: "fc6"
 top: "bn5"
 param {
    lr_mult: 0
 }
 param {
    lr_mult: 0
 }
 param {
    lr_mult: 0
 }
}

layer {
  name: "relu6"
  type: "ReLU"
  bottom: "bn5"
  top: "relu6"
}

layer {
  name: "super_class_coco"
  type: "InnerProduct"
  bottom: "relu6"
  top: "super_class_coco"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 12
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "super_class_coco"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "super_class_coco"
  bottom: "label"
  top: "loss"
}
